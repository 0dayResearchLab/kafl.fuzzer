From dddbd8d506bd66c4e12a1687b78f45de2944551c Mon Sep 17 00:00:00 2001
From: Steffen Schulz <steffen.schulz@intel.com>
Date: Fri, 15 Nov 2019 14:10:53 +0000
Subject: [PATCH 2/2] Fix segfault when IPT filtering is not enabled

---
 pt/hypercall.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/pt/hypercall.c b/pt/hypercall.c
index 6839264d..7fa2f73d 100644
--- a/pt/hypercall.c
+++ b/pt/hypercall.c
@@ -512,13 +512,13 @@ bool handle_hypercall_kafl_hook(struct kvm_run *run, CPUState *cpu){
     CPUX86State *env = &cpux86->env;
 
 	for(uint8_t i = 0; i < INTEL_PT_MAX_RANGES; i++){
-		if (cpu->redqueen_state[i] && (env->eip >= cpu->pt_ip_filter_a[i]) && (env->eip <= cpu->pt_ip_filter_b[i])){
-			handle_hook(cpu->redqueen_state[i]);
-			return true;
-		}else if (cpu->singlestep_enabled && ((redqueen_t*)cpu->redqueen_state[i])->singlestep_enabled){
-			handle_hook(cpu->redqueen_state[i]);
-			return true;
-    }
+		if (cpu->redqueen_state[i]){
+			if (((env->eip >= cpu->pt_ip_filter_a[i]) && (env->eip <= cpu->pt_ip_filter_b[i])) ||
+				(cpu->singlestep_enabled && ((redqueen_t*)cpu->redqueen_state[i])->singlestep_enabled)){
+				handle_hook(cpu->redqueen_state[i]);
+				return true;
+			}
+		}
 	}
 	return false;
 }
-- 
2.20.1

